apiVersion: apps/v1
kind: Deployment
metadata:
  name: ocp-demo-app-db-kafka
spec:
  selector:
    matchLabels:
      app: ocp-demo-app-db-kafka
  replicas: 3
  template:
    metadata:
      labels:
        app: ocp-demo-app-db-kafka
    spec:
      initContainers:
      - name: init-db-service
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup postgresql.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for postgresql; sleep 2; done"]
      - name: init-kafka-service
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup kafka-ip-service.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for kafka-ip-service; sleep 2; done"]
      containers:
      - name: ocp-demo-app-db-kafka
        image: sumitgupta28/ocp-demo-app-db-kafka-kafka:latest
        ports:
        - containerPort: 8080
        env:
          - name: POSTGRESQL_DB_NAME
            valueFrom: 
              configMapKeyRef:
                name: postgres-configuration
                key: POSTGRES_DB        
                
          - name: POSTGRESQL_USER
            valueFrom: 
              configMapKeyRef:
                name: postgres-configuration        
                key: POSTGRES_USER        
                
          - name: POSTGRESQL_PASSWORD
            valueFrom: 
              configMapKeyRef:
                name: postgres-configuration        
                key: POSTGRES_PASSWORD        

          - name: POSTGRESQL_PORT
            valueFrom: 
              configMapKeyRef:
                name: postgres-configuration        
                key: POSTGRESQL_PORT        

          - name: KAFKA_ENDPOINT
            value: kafka-ip-service:9092       
                
                
                
                
                